from django.db import models
from django.contrib.auth.models import User, AbstractUser
from django.contrib.auth.models import AbstractBaseUser, PermissionsMixin, User, BaseUserManager
class CareerCenter(models.Model):
    name = models.CharField(max_length=100)
    description = models.TextField()

    def __str__(self):
        return self.name


class Vacancy(models.Model):
    career_center = models.ForeignKey(CareerCenter, on_delete=models.CASCADE, related_name='vacancies')
    title = models.CharField(max_length=100)
    short_description = models.TextField()
    main_description = models.TextField()
    salary = models.DecimalField(max_digits=8, decimal_places=2)
    main_image = models.ImageField(upload_to='vacancy_images')
    additional_images = models.ManyToManyField('AdditionalImage', blank=True)

    def __str__(self):
        return self.title


class AdditionalImage(models.Model):
    image = models.ImageField(upload_to='additional_images')

    def __str__(self):
        return self.image.name

class Messenger(models.Model):
    career_centers = models.ManyToManyField(CareerCenter, related_name='messengers')
    name = models.CharField(max_length=100)
    description = models.TextField()

    # Additional fields related to the messenger

    def __str__(self):
        return self.name

class UserProfileManager(BaseUserManager):
    def create_user(self, email, password=None, **extra_fields):
        if not email:
            raise ValueError('The Email field must be set')
        email = self.normalize_email(email)
        user = self.model(email=email, **extra_fields)
        user.set_password(password)
        user.save()
        return user

    def create_superuser(self, email, password=None, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)
        return self.create_user(email, password, **extra_fields)

class UserProfile(AbstractBaseUser, PermissionsMixin):
    email = models.EmailField(unique=True)
    avatar = models.ImageField(upload_to='avatars', blank=True)
    is_employer = models.BooleanField(default=False)
    company = models.TextField(blank=True)
    is_job_seeker = models.BooleanField(default=False)
    faculty = models.TextField(blank=True)

    objects = UserProfileManager()

    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = []

    def __str__(self):
        return self.email
